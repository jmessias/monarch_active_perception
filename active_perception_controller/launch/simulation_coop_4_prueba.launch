<?xml version="1.0"?>

<launch>
    <node name="map_server" pkg="map_server" type="map_server" args="$(find stage_simulation)/config/prueba.yaml">
        <param name="frame_id" value="/map" />
    </node>
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find stage_simulation)/config/simulation_4robots.rviz">

    </node>
    

    <include file="$(find stage_simulation)/launch/stage_4robots.launch"/>
    <include file="$(find stage_simulation)/launch/amcl_4robots.launch" />
    
    <node pkg="active_perception_controller" type="person_estimator_coop" name="estimator0">
	<param name="step_duration" type="double" value="0.2" />
	<param name="num_particles" type="int" value="1000" />
	<param name="sigma_person" type="double" value="0.05" />
	<param name="rfid_map_resolution" type="double" value="0.06" />
	<param name="rfid_prob_map" type="string" value="$(find active_perception_controller)/config/sensormodel.png" />
	<param name="num_robots" type="int" value="4" />
    </node>


     <node pkg="move_base" type="move_base" respawn="false" name="move_base0" output="screen">
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage0.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage0.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find stage_simulation)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/base_local_planner_params.yaml" command="load" />
        <!--rosparam file="$(find stage_simulation)/config/dwa_local_planner_params.yaml" command="load" /-->
        <param name="controller_frequency" type="double" value="20.0" />
        <rosparam param="recovery_behaviors">[{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                                              {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]</rosparam>
        <param name="planner_patience" type="double" value="30.0"/>
        <param name="controller_patience" type="double" value="60.0"/>
        <param name="~/global_costmap/robot_base_frame" value="robot_0/base_link" />
        <param name="~/local_costmap/robot_base_frame" value="robot_0/base_link" />
        <param name="~/local_costmap/global_frame" value="robot_0/odom" />
        <remap from="map" to="/map"/>
        <remap from="/move_base/status" to="/robot_0/move_base/status"/>
        <remap from="/move_base/result" to="/robot_0/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_0/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_0/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_0/move_base/cancel"/>
        <remap from="plan" to="/robot_0/plan"/>
        <remap from="cmd_vel" to="/robot_0/cmd_vel"/>
        <remap from="odom" to="/robot_0/odom"/>
        <remap from="scan" to="/robot_0/base_scan" />
    </node>
	    <node name="navigation0" pkg="scout_navigation" type="navigator" output="screen">
		<param name="~guidance_method" type="string" value="move_base0"/>
		<param name="~platform_mode" type="string" value="omni"/>
	    </node>


    <node pkg="move_base" type="move_base" respawn="false" name="move_base1" output="screen">
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage1.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage1.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find stage_simulation)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/base_local_planner_params.yaml" command="load" />
        <!--rosparam file="$(find stage_simulation)/config/dwa_local_planner_params.yaml" command="load" /-->
        <param name="controller_frequency" type="double" value="20.0" />
        <rosparam param="recovery_behaviors">[{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                                              {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]</rosparam>
        <param name="planner_patience" type="double" value="30.0"/>
        <param name="controller_patience" type="double" value="60.0"/>
        <param name="~/global_costmap/robot_base_frame" value="robot_1/base_link" />
        <param name="~/local_costmap/robot_base_frame" value="robot_1/base_link" />
        <param name="~/local_costmap/global_frame" value="robot_1/odom" />
        <remap from="map" to="/map"/>
        <remap from="/move_base/status" to="/robot_1/move_base/status"/>
        <remap from="/move_base/result" to="/robot_1/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_1/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_1/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_1/move_base/cancel"/>
        <remap from="plan" to="/robot_1/plan"/>
        <remap from="cmd_vel" to="/robot_1/cmd_vel"/>
        <remap from="odom" to="/robot_1/odom"/>
        <remap from="scan" to="/robot_1/base_scan" />
    </node>

	    <node name="navigation1" pkg="scout_navigation" type="navigator" output="screen">
		<param name="~guidance_method" type="string" value="move_base1"/>
		<param name="~platform_mode" type="string" value="omni"/>
	    </node>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base2" output="screen">
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage2.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage2.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find stage_simulation)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/base_local_planner_params.yaml" command="load" />
        <!--rosparam file="$(find stage_simulation)/config/dwa_local_planner_params.yaml" command="load" /-->
        <param name="controller_frequency" type="double" value="20.0" />
        <rosparam param="recovery_behaviors">[{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                                              {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]</rosparam>
        <param name="planner_patience" type="double" value="30.0"/>
        <param name="controller_patience" type="double" value="60.0"/>
        <param name="~/global_costmap/robot_base_frame" value="robot_2/base_link" />
        <param name="~/local_costmap/robot_base_frame" value="robot_2/base_link" />
        <param name="~/local_costmap/global_frame" value="robot_2/odom" />
        <remap from="map" to="/map"/>
        <remap from="/move_base/status" to="/robot_2/move_base/status"/>
        <remap from="/move_base/result" to="/robot_2/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_2/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_2/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_2/move_base/cancel"/>
        <remap from="plan" to="/robot_2/plan"/>
        <remap from="cmd_vel" to="/robot_2/cmd_vel"/>
        <remap from="odom" to="/robot_2/odom"/>
        <remap from="scan" to="/robot_2/base_scan" />
    </node>
	    <node name="navigation2" pkg="scout_navigation" type="navigator" output="screen">
		<param name="~guidance_method" type="string" value="move_base2"/>
		<param name="~platform_mode" type="string" value="omni"/>
	    </node>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base3" output="screen">
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage3.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find stage_simulation)/config/costmap_common_params_stage3.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find stage_simulation)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find stage_simulation)/config/base_local_planner_params.yaml" command="load" />
        <!--rosparam file="$(find stage_simulation)/config/dwa_local_planner_params.yaml" command="load" /-->
        <param name="controller_frequency" type="double" value="20.0" />
        <rosparam param="recovery_behaviors">[{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                                              {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]</rosparam>
        <param name="planner_patience" type="double" value="30.0"/>
        <param name="controller_patience" type="double" value="60.0"/>
        <param name="~/global_costmap/robot_base_frame" value="robot_3/base_link" />
        <param name="~/local_costmap/robot_base_frame" value="robot_3/base_link" />
        <param name="~/local_costmap/global_frame" value="robot_3/odom" />
        <remap from="map" to="/map"/>
        <remap from="/move_base/status" to="/robot_3/move_base/status"/>
        <remap from="/move_base/result" to="/robot_3/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_3/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_3/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_3/move_base/cancel"/>
        <remap from="plan" to="/robot_3/plan"/>
        <remap from="cmd_vel" to="/robot_3/cmd_vel"/>
        <remap from="odom" to="/robot_3/odom"/>
        <remap from="scan" to="/robot_3/base_scan" />
    </node>

	    <node name="navigation3" pkg="scout_navigation" type="navigator" output="screen">
		<param name="~guidance_method" type="string" value="move_base3"/>
		<param name="~platform_mode" type="string" value="omni"/>
	    </node>
   
    
    <node pkg="active_perception_controller" type="motion_planner_coop.py" name="entropy_motion_planner0" output="screen">
	    <param name="rrt_nearest_part_bias" type="double" value="0.2" />
	    <param name="rrt_total_dist_bias" type="double" value="0.05" />
	    <param name="rrt_entropy_bias" type="double" value="10" />
	    <param name="max_rrt_iterations" type="int" value="500" />
	    <param name="max_path_size" type="int" value="20" />	
	    <param name="rrt_eta" type="double" value="0.5" />
	    <param name="sigma_person" type="double" value="0.05" />
	    <param name="left_agents" type="int" value="3" />
	    <param name="own_agents" type="int" value="1" />
	    <param name="right_agents" type="int" value="0" />
	    <param name="pos_izq_x" type="double" value="-25.0" />
	    <param name="pos_izq_y" type="double" value="-0.0" />
	    <param name="pos_dcha_x" type="double" value="25.0" />
	    <param name="pos_dcha_y" type="double" value="-0.0" />
        <remap from="plan" to="/robot_0/plan"/>
        <remap from="amcl_pose" to="/robot_0/amcl_pose" />
	<remap from="person_particle_cloud_assigned" to="/robot_0/person_particle_cloud" />
    </node>

    <node pkg="active_perception_controller" type="motion_planner_coop.py" name="entropy_motion_planner1" output="screen">
	    <param name="rrt_nearest_part_bias" type="double" value="0.2" />
	    <param name="rrt_total_dist_bias" type="double" value="0.05" />
	    <param name="rrt_entropy_bias" type="double" value="10" />
	    <param name="max_rrt_iterations" type="int" value="500" />
	    <param name="max_path_size" type="int" value="20" />	
	    <param name="rrt_eta" type="double" value="0.5" />
	    <param name="sigma_person" type="double" value="0.05" />
	    <param name="left_agents" type="int" value="0" />
	    <param name="own_agents" type="int" value="1" />
	    <param name="right_agents" type="int" value="3" />
	    <param name="pos_izq_x" type="double" value="-25.0" />
	    <param name="pos_izq_y" type="double" value="-0.0" />
	    <param name="pos_dcha_x" type="double" value="25.0" />
	    <param name="pos_dcha_y" type="double" value="-0.0" />
        <remap from="plan" to="/robot_1/plan"/>
        <remap from="amcl_pose" to="/robot_1/amcl_pose" />
	<remap from="person_particle_cloud_assigned" to="/robot_1/person_particle_cloud" />
    </node>
    
    <node pkg="active_perception_controller" type="motion_planner_coop.py" name="entropy_motion_planner2" output="screen">
	    <param name="rrt_nearest_part_bias" type="double" value="0.2" />
	    <param name="rrt_total_dist_bias" type="double" value="0.05" />
	    <param name="rrt_entropy_bias" type="double" value="10" />
	    <param name="max_rrt_iterations" type="int" value="500" />
	    <param name="max_path_size" type="int" value="20" />	
	    <param name="rrt_eta" type="double" value="0.5" />
	    <param name="sigma_person" type="double" value="0.05" />
	    <param name="left_agents" type="int" value="2" />
	    <param name="own_agents" type="int" value="1" />
	    <param name="right_agents" type="int" value="1" />
	    <param name="pos_izq_x" type="double" value="-25.0" />
	    <param name="pos_izq_y" type="double" value="-0.0" />
	    <param name="pos_dcha_x" type="double" value="25.0" />
	    <param name="pos_dcha_y" type="double" value="-0.0" />
        <remap from="plan" to="/robot_2/plan"/>
        <remap from="amcl_pose" to="/robot_2/amcl_pose" />
	<remap from="person_particle_cloud_assigned" to="/robot_2/person_particle_cloud" />
    </node>

    <node pkg="active_perception_controller" type="motion_planner_coop.py" name="entropy_motion_planner3" output="screen">
	    <param name="rrt_nearest_part_bias" type="double" value="0.2" />
	    <param name="rrt_total_dist_bias" type="double" value="0.05" />
	    <param name="rrt_entropy_bias" type="double" value="10" />
	    <param name="max_rrt_iterations" type="int" value="500" />
	    <param name="max_path_size" type="int" value="20" />	
	    <param name="rrt_eta" type="double" value="0.5" />
	    <param name="sigma_person" type="double" value="0.05" />
	    <param name="left_agents" type="int" value="1" />
	    <param name="own_agents" type="int" value="1" />
	    <param name="right_agents" type="int" value="2" />
	    <param name="pos_izq_x" type="double" value="-25.0" />
	    <param name="pos_izq_y" type="double" value="-0.0" />
	    <param name="pos_dcha_x" type="double" value="25.0" />
	    <param name="pos_dcha_y" type="double" value="-0.0" />
        <remap from="plan" to="/robot_3/plan"/>
        <remap from="amcl_pose" to="/robot_3/amcl_pose" />
	<remap from="person_particle_cloud_assigned" to="/robot_3/person_particle_cloud" />
    </node>

    <node pkg="active_perception_controller" type="active_perception_task_node_obstacles.py" name="active_perception_task_node0">   

        <remap from="/move_base/status" to="/robot_0/move_base/status"/>
        <remap from="/move_base/result" to="/robot_0/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_0/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_0/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_0/move_base/cancel"/>
    </node> 

    <node pkg="active_perception_controller" type="active_perception_task_node_obstacles.py" name="active_perception_task_node1">   

        <remap from="/move_base/status" to="/robot_1/move_base/status"/>
        <remap from="/move_base/result" to="/robot_1/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_1/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_1/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_1/move_base/cancel"/>
    </node> 

    <node pkg="active_perception_controller" type="active_perception_task_node_obstacles.py" name="active_perception_task_node2">   

        <remap from="/move_base/status" to="/robot_2/move_base/status"/>
        <remap from="/move_base/result" to="/robot_2/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_2/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_2/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_2/move_base/cancel"/>
    </node> 

    <node pkg="active_perception_controller" type="active_perception_task_node_obstacles.py" name="active_perception_task_node3">   

        <remap from="/move_base/status" to="/robot_3/move_base/status"/>
        <remap from="/move_base/result" to="/robot_3/move_base/result"/>
        <remap from="/move_base/feedback" to="/robot_3/move_base/feedback"/>
        <remap from="/move_base/goal" to="/robot_3/move_base/goal"/>
        <remap from="/move_base/cancel" to="/robot_3/move_base/cancel"/>
    </node> 

</launch>
